 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function makeContract() payable returns(address)


 #define macro MAIN() = takes(0) returns(0) {
      // function selector
  0x00
  calldataload // [ calldata[0,32] ]
  0xe0 // [224, calldata[0,32]]
  shr // [funcSelector]

  __FUNC_SIG(makeContract) // [ add1Sig, funcSelector ]
  eq // [EQUAL]
  makeContractJump // [ add1Pos, EQUAL ]
  jumpi // []

  0x00 0x00 // [0, 0]
  revert 

  makeContractJump:
    MAKECONTRACT()
 }

 #define macro MAKECONTRACT() = takes(0) returns(0) { 
  __tablesize(CODE_TABLE)
  dup1 // duplicate size for future create
  __tablestart(CODE_TABLE)
  0x00
  codecopy // copy code from bytecode
  0x00
  0x00
  create // [address]
  0x00
  mstore
  0x20
  0x00
  return
 }


#define table CODE_TABLE {
  0x600a8060093d393df3620caffe5f5260205ff3
}

// **Deployed Contract**
// #define macro MAIN() = takes(0) returns(0) {
//   0xcaffe
//   0x0
//   mstore
//   0x20 0x0
//   return
// }
