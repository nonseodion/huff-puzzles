 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
  0x00
  calldataload // [ calldata[0,32] ]
  0xe0 // [224, calldata[0,32]]
  shr // [funcSelector]

  __FUNC_SIG(sendEther) // [ maxOfArrayJumpSig, funcSelector ]
  eq // [EQUAL]
  sendEtherJump // [ maxOfArrayJump, EQUAL ]
  jumpi // []

  0x00 0x00 // [0, 0]
  revert 

  sendEtherJump:
    SENDETHER()
 }

 #define macro SENDETHER() = takes(0) returns(0) {
  0x00 0x00 0x00 0x00 // [ argsOffset, argsSize, retOffset, retSize ]
  callvalue // [value, argsOffset, argsSize, retOffset, retSize]
  0x04 calldataload // [address, value, argsOffset, argsSize, retOffset, retSize]
  0x00 // [gas, address, value, argsOffset, argsSize, retOffset, retSize]
  call
  0x00 0x00
  return
 }
